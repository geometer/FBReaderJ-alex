<?xml version="1.0" encoding="UTF-8"?>
<project name="FBReaderJ" default="package">
	<property file="local.properties" />
	<property file="build.properties" />
	<property file="default.properties" />

	<path id="android.antlibs">
		<pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
		<pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
		<pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
		<pathelement path="${sdk.dir}/tools/lib/apkbuilder.jar" />
		<pathelement path="${sdk.dir}/tools/lib/jarutils.jar" />
	</path>

	<taskdef name="setup"
		classname="com.android.ant.SetupTask"
		classpathref="android.antlibs" />

	<setup />

	<target name="init" description="Initialization...">
		<condition property="Ant17isOnline">
			<and>
				<antversion property="ant.version" atleast="1.7.0"/>
			</and>
		</condition>
		<fail message="ANT with version at least 1.7 should be present !!! Update your local '${ant.version}' first.">
			<condition>
				<not>
					<isset property="Ant17isOnline"/>
				</not>
			</condition>
		</fail>
	</target>

	<target name="native" unless="native.lib.is.built">
		<fail message="Native libraries are not up-to-date. Please run ndk-build manually.">
			<condition>
				<os family="windows" />
			</condition>
		</fail>
		<echo message="Try to build 'libDeflatingDecompressor.so', 'libLineBreak.so'...."/>
		<exec executable="${ndk.dir}/ndk-build" />
	</target>

	<target name="check.native.libs.are.present" depends="init">
		<echo message="Check if Native Libs 'libDeflatingDecompressor.so', 'libLineBreak.so' are present and uptodate..."/>

		<!-- Evaluate if it's necessary build 'C' sources and property 'native.lib.is.built' GETS VALUE , otherwise stays UNDEFINED -->
		<condition property="native.lib.is.built" value="true">
			<and>
				<!-- Check if 'DeflatingDecompressor' C++ sources are up to date -->
				<uptodate property="libDeflatingDecompressor-build-is-not-required" targetfile="libs/armeabi/libDeflatingDecompressor.so">
					<srcfiles dir="jni/DeflatingDecompressor" includes="**/*.cpp"/>
				</uptodate>
				<!-- Check if 'LineBreak' C++, C sources are up to date -->
				<uptodate property="libLineBreak-build-is-not-required" targetfile="libs/armeabi/libLineBreak.so">
					<srcfiles dir="jni/LineBreak" includes="**/*.cpp,**/*.c,**/*.h"/>
				</uptodate>
				<!-- Check if *.so libraries are built and present in folder -->
				<available file="./libs/armeabi/libDeflatingDecompressor.so" />
				<available file="./libs/armeabi/libLineBreak.so" />
			</and>
		</condition>
		<echo message="Is property 'native.lib.is.built' evaluated and setup to some VALUE ? value = '${native.lib.is.built}'"/>
		<echo message="DONE! Check if Native Libs 'libDeflatingDecompressor.so', 'libLineBreak.so' are present and uptodate..."/>
	</target>

	<target name="resources" depends="init, check.native.libs.are.present">
		<!-- Delete all files from gen/text_search and res/drawable  -->
		<echo message="Clean up 'res/drawable' folder..." />
		<delete dir="res/drawable/">
			<files includes="**"/>
		</delete>
		<echo message="DONE! Clean up 'res/drawable' folder" />

		<!-- Copy all icons/ files into res/drawable  EXCEPT /icons/text_search folder -->
		<echo message="Copying icons files to 'res/drawable/' folder..." />
		<copy todir="res/drawable" verbose="false" overwrite="true" flatten="true">
			<fileset file="icons/fbreader.png" />
			<fileset dir="icons/" includes="*/*" />
		</copy>
		<echo message="DONE! Copying icons files to 'res/drawable/' folder" />
	</target>

	<target name="package" depends="init, resources, native, release" />
	<target name="dbg" depends="init, resources, native, debug" />

	<target name="clean">
		<echo message="Clean all temporary folders..." />
		<delete dir="gen" />
		<delete dir="bin" />
		<delete dir="res/drawable" />
		<delete dir="out" />
		<delete dir="obj" />
		<echo message="DONE! Clean all temporary folders" />
	</target>

	<target name="distclean" depends="clean">
		<delete dir="libs" />
	</target>
</project>
